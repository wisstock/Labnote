hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=10),
panel.border = element_rect(color = "green",
fill = NA,
size = 5))
ggsave('box_green.png', box.green,
width = 5, height = 10, units = 'cm', dpi = 300)
ggsave('box_green.png', box.green,
width = 7, height = 10, units = 'cm', dpi = 300)
##### BLUE BOXPLOT #####
df.blue <- df.full %>%
filter(index == blue.index) %>%
select(id, roi, int, hpca)
df.blue.avg <- df.blue %>%
group_by(id, hpca) %>%
mutate(int_mean = mean(int)) %>%
select(-roi, -int) %>%
unique()
df.blue.stat <- df.blue %>%
select(int, hpca) %>%
wilcox_test(int ~ hpca) %>%
add_significance() %>%
add_xy_position(fun = 'median_iqr', scales = 'free') %>%
mutate(y.position = y.position + 0.05)
box.blue <- ggplot() +
geom_boxplot(data = df.blue,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.blue.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.green.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.blue.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=10),
panel.border = element_rect(color = "blue",
fill = NA,
size = 5))
ggsave('box_blue.png', box.blue,
width = 7, height = 10, units = 'cm', dpi = 300)
box.green <- ggplot() +
geom_boxplot(data = df.green,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.green.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.green.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.green.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=10),
panel.border = element_rect(color = "green",
fill = NA,
size = 3))
ggsave('box_green.png', box.green,
width = 7, height = 10, units = 'cm', dpi = 300)
box.blue <- ggplot() +
geom_boxplot(data = df.blue,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.blue.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.green.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.blue.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=10),
panel.border = element_rect(color = "blue",
fill = NA,
size = 3))
ggsave('box_blue.png', box.blue,
width = 7, height = 10, units = 'cm', dpi = 300)
df.blue.stat <- df.blue %>%
select(int, hpca) %>%
wilcox_test(int ~ hpca) %>%
add_significance() %>%
add_xy_position(fun = 'median_iqr', scales = 'free') %>%
mutate(y.position = y.position + 0.06)
box.blue <- ggplot() +
geom_boxplot(data = df.blue,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.blue.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.green.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.blue.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=10),
panel.border = element_rect(color = "blue",
fill = NA,
size = 3))
ggsave('box_blue.png', box.blue,
width = 7, height = 10, units = 'cm', dpi = 300)
df.blue.stat <- df.blue %>%
select(int, hpca) %>%
wilcox_test(int ~ hpca) %>%
add_significance() %>%
add_xy_position(fun = 'median_iqr', scales = 'free') %>%
mutate(y.position = y.position + 0.08)
box.blue <- ggplot() +
geom_boxplot(data = df.blue,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.blue.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.green.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.blue.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=10),
panel.border = element_rect(color = "blue",
fill = NA,
size = 3))
ggsave('box_blue.png', box.blue,
width = 7, height = 10, units = 'cm', dpi = 300)
df.blue.stat <- df.blue %>%
select(int, hpca) %>%
wilcox_test(int ~ hpca) %>%
add_significance() %>%
add_xy_position(fun = 'median_iqr', scales = 'free') %>%
mutate(y.position = y.position + 0.06)
box.blue <- ggplot() +
geom_boxplot(data = df.blue,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.blue.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.green.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.blue.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=10),
panel.border = element_rect(color = "blue",
fill = NA,
size = 3))
ggsave('box_blue.png', box.blue,
width = 7, height = 10, units = 'cm', dpi = 300)
box.blue <- ggplot() +
geom_boxplot(data = df.blue,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.blue.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.blue.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.blue.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=10),
panel.border = element_rect(color = "blue",
fill = NA,
size = 3))
ggsave('box_blue.png', box.blue,
width = 7, height = 10, units = 'cm', dpi = 300)
ggsave('prof_avg.png', prof.avg,
width = 7, height = 10, units = 'cm', dpi = 300)
prof.avg <- ggplot(data = df.avg) +
geom_line(aes(x = index, y = int_mean, color = hpca)) +
geom_point(aes(x = index, y = int_mean, color = hpca)) +
geom_errorbar(aes(x = index,
ymax = int_mean + int_se,
ymin = int_mean - int_se,
color = hpca),
width = 0.2) +
scale_colour_manual(name = NULL,
values = c('black', 'red')) +
geom_segment(aes(x = blue.index, xend = blue.index,
y = 0.125, yend = 0.135),
color = 'blue',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = green.index, xend = green.index,
y = 0.11, yend = 0.12),
color = 'green',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_vline(xintercept = 5, linetype='dashed') +
scale_x_continuous(name = 'Time, s',
limits = c(1, 15),
breaks = seq(1, 15, 1),
labels = seq(0, 74, 5),
ticks = seq(0, 74, 10)) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0,0)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = c(.9, .18),
text = element_text(family='arial', face="bold", size=10))
prof.avg <- ggplot(data = df.avg) +
geom_line(aes(x = index, y = int_mean, color = hpca)) +
geom_point(aes(x = index, y = int_mean, color = hpca)) +
geom_errorbar(aes(x = index,
ymax = int_mean + int_se,
ymin = int_mean - int_se,
color = hpca),
width = 0.2) +
scale_colour_manual(name = NULL,
values = c('black', 'red')) +
geom_segment(aes(x = blue.index, xend = blue.index,
y = 0.125, yend = 0.135),
color = 'blue',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = green.index, xend = green.index,
y = 0.11, yend = 0.12),
color = 'green',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_vline(xintercept = 5, linetype='dashed') +
scale_x_continuous(name = 'Time, s',
limits = c(1, 15),
breaks = seq(1, 15, 1),
labels = seq(0, 74, 10)) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0,0)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = c(.9, .18),
text = element_text(family='arial', face="bold", size=10))
prof.avg <- ggplot(data = df.avg) +
geom_line(aes(x = index, y = int_mean, color = hpca)) +
geom_point(aes(x = index, y = int_mean, color = hpca)) +
geom_errorbar(aes(x = index,
ymax = int_mean + int_se,
ymin = int_mean - int_se,
color = hpca),
width = 0.2) +
scale_colour_manual(name = NULL,
values = c('black', 'red')) +
geom_segment(aes(x = blue.index, xend = blue.index,
y = 0.125, yend = 0.135),
color = 'blue',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = green.index, xend = green.index,
y = 0.11, yend = 0.12),
color = 'green',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_vline(xintercept = 5, linetype='dashed') +
scale_x_continuous(name = 'Time, s',
limits = c(1, 15),
breaks = seq(1, 15, 1)) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0,0)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = c(.9, .18),
text = element_text(family='arial', face="bold", size=10))
ggsave('prof_avg.png', prof.avg,
width = 7, height = 10, units = 'cm', dpi = 300)
prof.avg <- ggplot(data = df.avg) +
geom_line(aes(x = index, y = int_mean, color = hpca)) +
geom_point(aes(x = index, y = int_mean, color = hpca)) +
geom_errorbar(aes(x = index,
ymax = int_mean + int_se,
ymin = int_mean - int_se,
color = hpca),
width = 0.2) +
scale_colour_manual(name = NULL,
values = c('black', 'red')) +
geom_segment(aes(x = blue.index, xend = blue.index,
y = 0.125, yend = 0.135),
color = 'blue',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = green.index, xend = green.index,
y = 0.11, yend = 0.12),
color = 'green',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_vline(xintercept = 5, linetype='dashed') +
scale_x_continuous(name = 'Time, s',
limits = c(1, 15),
breaks = waiver(),
labels = seq(0, 74, 5)) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0,0)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = c(.9, .18),
text = element_text(family='arial', face="bold", size=10))
ggsave('prof_avg.png', prof.avg,
width = 7, height = 10, units = 'cm', dpi = 300)
prof.avg <- ggplot(data = df.avg) +
geom_line(aes(x = index, y = int_mean, color = hpca)) +
geom_point(aes(x = index, y = int_mean, color = hpca)) +
geom_errorbar(aes(x = index,
ymax = int_mean + int_se,
ymin = int_mean - int_se,
color = hpca),
width = 0.2) +
scale_colour_manual(name = NULL,
values = c('black', 'red')) +
geom_segment(aes(x = blue.index, xend = blue.index,
y = 0.125, yend = 0.135),
color = 'blue',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = green.index, xend = green.index,
y = 0.11, yend = 0.12),
color = 'green',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_vline(xintercept = 5, linetype='dashed') +
scale_x_continuous(name = 'Time, s',
limits = c(1, 15),
breaks = seq(1, 15, 1),
labels = seq(0, 74, 5)) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0,0)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = c(.9, .18),
text = element_text(family='arial', face="bold", size=7))
ggsave('prof_avg.png', prof.avg,
width = 7, height = 10, units = 'cm', dpi = 300)
box.green <- ggplot() +
geom_boxplot(data = df.green,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.green.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.green.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.green.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=8),
panel.border = element_rect(color = "green",
fill = NA,
size = 3))
ggsave('box_green.png', box.green,
width = 5, height = 10, units = 'cm', dpi = 300)
box.blue <- ggplot() +
geom_boxplot(data = df.blue,
aes(x = hpca, y = int, fill = hpca), alpha = .6) +
geom_point(data = df.blue.avg,
aes(x = hpca, y = int_mean)) +
geom_line(data = df.blue.avg,
aes(x = hpca, y = int_mean, group = id),
linetype = 'dashed') +
stat_pvalue_manual(df.blue.stat, label = 'p.signif',
hide.ns = FALSE, size = 5, family='arial') +
scale_fill_manual(name = NULL,
values = c('black', 'red')) +
scale_x_discrete(name = NULL) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.35),
breaks = seq(0, 0.5, 0.05)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = 'none',
text = element_text(family='arial', face="bold", size=8),
panel.border = element_rect(color = "blue",
fill = NA,
size = 3))
ggsave('box_blue.png', box.blue,
width = 5, height = 10, units = 'cm', dpi = 300)
prof.avg <- ggplot(data = df.avg) +
geom_line(aes(x = index, y = int_mean, color = hpca)) +
geom_point(aes(x = index, y = int_mean, color = hpca)) +
geom_errorbar(aes(x = index,
ymax = int_mean + int_se,
ymin = int_mean - int_se,
color = hpca),
width = 0.2) +
scale_colour_manual(name = NULL,
values = c('black', 'red')) +
geom_segment(aes(x = blue.index, xend = blue.index,
y = 0.125, yend = 0.135),
color = 'blue',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = green.index, xend = green.index,
y = 0.11, yend = 0.12),
color = 'green',
arrow = arrow(length = unit(0.2, "cm"))) +
geom_vline(xintercept = 5, linetype='dashed') +
scale_x_continuous(name = 'Time, s',
limits = c(1, 15),
breaks = seq(1, 15, 1),
labels = seq(0, 74, 5)) +
scale_y_continuous(name = 'ΔF/F0',
limits = c(-0.01, 0.2),
breaks = seq(0, 0.2, 0.025),
expand = c(0,0)) +
theme_classic() +
theme(panel.grid.major = element_line(linetype = 'dotted',
size = 0.1,
colour = "black"),
legend.position = c(.9, .18),
text = element_text(family='arial', face="bold", size=9))
ggsave('prof_avg.png', prof.avg,
width = 9, height = 10, units = 'cm', dpi = 300)
ggsave('prof_avg.png', prof.avg,
width = 12, height = 10, units = 'cm', dpi = 300)
ggsave('prof_avg.png', prof.avg,
width = 12, height = 9, units = 'cm', dpi = 300)
ggsave('prof_avg.png', prof.avg,
width = 12, height = 8, units = 'cm', dpi = 300)
ggsave('prof_avg.png', prof.avg,
width = 12, height = 8.5, units = 'cm', dpi = 300)
